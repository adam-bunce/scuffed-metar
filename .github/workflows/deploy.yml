name: Deploy

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: install deps
        run: go mod download

      - name: run tests
        run: go test -v ./...

  build:
    needs: test
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Set AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my_images
          IMAGE_TAG: scuffed_metar_image
        run: |
          aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --build-arg WEBHOOK_URL_ARG="${{ secrets.WEBHOOK_URL }}" \
            --build-arg MQTT_PASS_ARG="${{ secrets.MQTT_PASS }}" \
            --build-arg MQTT_USER_ARG="${{ secrets.MQTT_USER }}" \
            -f main.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Container Image
        run: |
          curl -H "Authorization: Bearer ${{ secrets.BEARER }}" ${{ secrets.URL }}

